const Profile = require("../models/profileSchema");
const User = require("../models/User");

/*
/delete/editProfile
/get/getProfileData/:profile
/delete/deleteProfile/:profile
*/

// PUT
const editProfile = async (req, res, next) => {
  const userId = req.user._id;
  try {
    if (Object.keys(req.body).length === 0) {
      return res.status(400).json({ error: "No changes applied" });
    }

    const theProfile = await Profile.findOne({ profileOwner: userId });

    if (theProfile === null) {
      const createdProfile = await Profile.create({
        profileOwner: userId,
        ...req.body
      });
      if (!createdProfile) {
        throw new Error("Error creating a profile");
      }
      return res.status(201).json({ profile: createdProfile });
    } else {
      const updatedProfile = await Profile.findOneAndUpdate(
        { $set: req.body },
      );

      if (!updatedProfile) {
        throw new Error("Error updating a profile");
      }
      return res.status(200).json({ profile: updatedProfile });
    }
  } catch (err) {
    return res.status(500).json({ error: err.message || "Internal Server Error" });
  }
};



//get
const getProfileData = async (req, res) => {
  const { profileId } = req.params;

  console.log(profileId)

  if (!profileId) {
    throw new Error({ error: "profile Id has not been sent" });
  }
  try {
    const theProfile = await Profile.findOne({ profileOwner: profileId })
      .populate({
        path: "userFollowsThem",
        select: "name lastname",
      })
      .populate({
        path: "onlyUsersAllowedToSeeMe",
        select: "name lastname",
      })
      .populate({
        path: "blockedUsers",
        select: "name lastname",
      })
      .populate({
        path: "followersOfThisUser",
        select: "name lastname",
      });

    if (theProfile != null) {
      res.status(200).json({ theProfile });
    } else {
      res.status(404).json({ error: "Profile Not found" });
    }
  } catch (err) {
    res.status(500).json({ error: "Internal Server Error" });
  }
};

const getAllUsers = async (req, res) => {
  try {
    const users = await User.find({}, "_id username");

    if (users.length > 0) {
      res.status(200).json(users);
    } else {
      res.status(404).json({ error: "No users found" });
    }
  } catch (err) {
    res.status(500).json({ error: "Internal Server Error" });
  }
};

//delete
const deleteProfile = async (req, res) => {
  const { profile } = req.params;

  if (!profile) {
    throw new Error("profile has not been sent");
  }

  try {
    const deletedProfile = await blogPost.findByIdAndDelete({ _id: profile });

    if (deletedProfile) {
      res.status(200).json({ isDeleted: true });
    } else {
      res.status(404).json({ error: "profile not found" });
    }
  } catch (err) {
    res.status(500).json({ error: "Internal Server Error" });
  }
};

module.exports = {
  editProfile,
  getProfileData,
  deleteProfile,
  getAllUsers
};
